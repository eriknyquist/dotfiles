cproj() {
    if [ $# -lt 1 ] || [ $# -gt 2 ]
    then
        echo "Usage: $0 <project_name> [<directory>]"
        return
    fi

    projname=$1
    guard=$(echo $projname | awk '{print toupper($0)}')_H

    if [ $# -eq 2 ]
    then
        directory=$2/
    else
        directory=$projname/
    fi

    [ -d $directory ] || mkdir -p $directory

    cat > $directory$projname.h << EOF
#ifndef $guard
#define $guard



#endif
EOF

    cat > $directory$projname.c << EOF
#include "$projname.h"


EOF

    cat > $directory'main.c' << EOF
#include "$projname.h"

int main(int argc, char *argv[])
{

}
EOF

    cat > $directory'Makefile' << EOF
OBJ= \$(patsubst %.c,%.o,\$(wildcard *.c))
PROGNAME=$projname

.PHONY: clean

%: %.c

all: \$(PROGNAME)

\$(PROGNAME): \$(OBJ)
	\$(CC) $^ -o \$@ \$(CFLAGS) \$(LDFLAGS)

clean:
	rm -f *.o
	rm -f \$(PROGNAME)
EOF
}

parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/'
}

export PS1="\u@\h \[\033[32m\]\w\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "
